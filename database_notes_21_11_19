Construct the entity relationship diagram (ERD)

Home page:
  Thumbnail:  Query video_id, quantity and selection based on admin setting
              frame_id = 1
              display the image
  Progress bar: Query all COUNT(frame), query COUNT(labelled framed)
  
  Take in: video_id selected


Label page:
  Image:
    Query the MIN(unlabelled frame) +- 5
    Query coordinates for all the lablled frames
  
  
  Submit button:
    Update
    
    
Log in timestamp table
    
https://medium.com/@vapurrmaid/getting-started-with-heroku-postgres-and-pgadmin-run-on-part-2-90d9499ed8fb
  
  
  
  
 SUBMIT BUTTON QUERY =>
 --video
DO $$
BEGIN
IF NOT EXISTS (
	SELECT * FROM video WHERE video_id = '5')
	THEN
		INSERT INTO video (video_id) VALUES (5);
	END IF;
END $$;

--ant
DO $$
BEGIN
IF NOT EXISTS (
	SELECT * FROM ant WHERE ant_id = 1 AND video_id='5')
	THEN
		INSERT INTO ant (ant_id, video_id) VALUES (1, 5);
	END IF;
END $$;


--frame
DO $$
BEGIN
IF NOT EXISTS(
	SELECT * FROM frame WHERE video_id = '2' AND frame_id = 17)
	THEN
		INSERT INTO frame (video_id, frame_id) values (2, 17);
	END IF;
END $$;

--coordinates
INSERT INTO coordinates (ant_id, frame_id, x_coord, y_coord, video_id) values (1, 17, 1, 1, 5);




--view
--SELECT * FROM video INNER JOIN frame ON video.video_id = frame.video_id INNER JOIN ant ON video.video_id = ant.video_id;
SELECT * FROM coordinates


CHECK FRAME EXISTS IN DATABASE FOR SPECIFIED VIDEO =>
SELECT frame_id FROM frame WHERE video_id = "1"




=> select image and return count 


SELECT video_id, COUNT(video_id) 
FROM frame 
GROUP BY video_id 
ORDER BY CAST(video_id AS INT)
LIMIT 4




